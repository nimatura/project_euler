"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is
minimised; what is the value of D?
"""


def pentagonal(k):
    return int(k * (3 * k - 1) / 2)


def is_pentagonal(k):
    disc = (1 + 24 * k) ** .5
    if not disc.is_integer():
        return False
    disc = int(disc)
    return (1 + disc) % 6 == 0


max_n = 2500
pentagonal_numbers = []
for n in range(1, max_n + 1):
    pentagonal_numbers.append(pentagonal(n))

pentagonal_pairs = []
for i in range(max_n):
    for j in range(i + 1, max_n):
        n1 = pentagonal_numbers[i]
        n2 = pentagonal_numbers[j]
        pentagonal_pairs.append((n1, n2))

pentagonal_pairs = sorted(pentagonal_pairs, key=lambda x: abs(x[1] - x[0]))


result = 0
for pp in pentagonal_pairs:
    d = pp[1] - pp[0]
    if d in pentagonal_numbers:
        s = pp[1] + pp[0]
        if is_pentagonal(s):
            result = d
            break
print(result)
# 5482660
